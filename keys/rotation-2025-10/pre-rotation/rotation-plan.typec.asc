-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

───────────────────────────────────────────────────────────────────────────────
Sol Framework — Key Rotation Plan
Date: 2025-10-25
───────────────────────────────────────────────────────────────────────────────

Objective:
  Transition from RSA-3072 keys to Ed25519/Cv25519 keys for all active
  hardware-generated OpenPGP material.  This rotation preserves cryptographic
  continuity while aligning the Framework’s identity infrastructure with
  Yubico’s attestation architecture.

───────────────────────────────────────────────────────────────────────────────
Rationale for Algorithm Transition

1. Historical Baseline
   - Prior generations (2023-2025) used RSA-3072 for signature, encryption, and
     authentication.
   - Selection rationale at that time: maximize cross-platform compatibility
     and minimize client-side errors in legacy PGP and Git implementations.

2. Present Context
   - All active identities are now hardware-resident (YubiKey Type-A and
     Type-C).
   - Cryptographic provenance and attestation are verified via Yubico’s
     OpenPGP attestation chain.
   - Repository verification and signature checking now occur in modern GPG
     (≥2.4), Git, and OpenSSL contexts which fully support Ed25519/Cv25519.

3. Transition Justification
   - Ed25519 (SIG/AUT) and Cv25519 (ENC) provide equivalent or stronger
     security with far smaller key sizes.
   - Operations are faster and deterministic.
   - These curves are non-NIST and independent of U.S. government parameter
     generation.
   - Yubico’s attestation chain explicitly expects Ed25519/Cv25519 keys,
     enabling verifiable on-device generation proofs.

───────────────────────────────────────────────────────────────────────────────
Planned Configuration (Post-Rotation)

Key Slots:
  SIG: ed25519
  ENC: cv25519
  AUT: ed25519

Generation Method:
  On-device using GPG `key-attr` with YubiKey admin mode.
  Attestation certificates exported and verified via `yk-attest-verify`.

Cross-Signing:
  1. Pre-rotation RSA keys and Control Tower key cross-sign each other.
  2. Newly generated Type-C keys sign Control Tower key.
  3. Control Tower key signs new Type-C keys.
  4. Provenance statement (v2.0) records fingerprints and SHA-256 of all above.

───────────────────────────────────────────────────────────────────────────────
Archival Policy

- - RSA-3072 keys remain valid for verification of historical signatures.
- - They are no longer used for live signing or encryption.
- - Revocation is not required; provenance establishes temporal retirement.

───────────────────────────────────────────────────────────────────────────────
Verification (OpenSSL route)
- ---------------------------
We verify YubiKey attestation and device certificates using the Yubico root and intermediates.

1) Build the chain:
   $ cat yubico-opgp-ca-1.pem yubico-intermediate.pem > yubico_chain.pem

2) Verify device (attestation) cert:
   $ openssl verify -CAfile yubico-ca-1.pem -untrusted yubico_chain.pem att_certificate_export.pem
   => OK

3) Verify each attestation cert (sig/aut/enc if present):
   $ openssl verify -CAfile yubico-ca-1.pem -untrusted yubico_chain.pem -untrusted att_certificate_export.pem sig_attest.pem
   => OK

4) Verify provenance signatures:
   $ gpg --verify PROVENANCE_v*.ct.asc
   $ gpg --verify PROVENANCE_v*.typec.asc

5) Verify checksums manifest and its signature:
   $ sha256sum --check checksums.sha256
   $ gpg --verify checksums.sha256.asc

───────────────────────────────────────────────────────────────────────────────
Implementation Note

This plan aligns the Framework’s cryptographic posture with the design
philosophy of verifiable, minimal-trust, hardware-resident identity anchors.
All future rotations will follow this ECC standard unless algorithmic
guidance changes materially.

───────────────────────────────────────────────────────────────────────────────
-----BEGIN PGP SIGNATURE-----

iQGzBAEBCAAdFiEEoASG2d9kPy3JUmbwDQB594qJq1MFAmj+rmQACgkQDQB594qJ
q1PpiQv/dxQkQ11tSsQqXWG1JMYi69/ECLPQEdi7b2yLtTWpf6/ifJ4ik26xzALY
WNuWD/fm0d82ELc111KfxctwAF0dcYV37osaLV9DAUAFFFfGw3+mSvh3gwdGiezW
ptB4zPlvo3NS7pEYOmoTLVahFar5Z9P3VTXgxnjKM4aO8H3jY4syAMAl4Jpqu0Fp
tRH7H87BI50jdHq8e7SokZ7/7PQeqDD8oNbq/G8ZIhzMXKkyhWSHDGoNnIovEP6R
WTMUqwWjYn0oaoODU2SzbHiJYwmrddyLdx1Yy7vO9Pbg1SjNgw+fG6sROlcrnEUl
taqRfUKqOxoOKIh+LArUoqxOg5tci3uloWqYzRP6ncpS7A1VNVQblNBLDkDAjJNA
aDDMNnegdrYuD2rhi9juAZieFCvUm/WioAJnwIT6zwuLbp3ug9YGTBWlFMuO7bR4
HuKDd3RjwQUrJCq5y18vYLZck+jcaFPybwv35w+q4sYHYbuU5DnZzhIZTzYZZYav
mLfcosc5
=u3TP
-----END PGP SIGNATURE-----
